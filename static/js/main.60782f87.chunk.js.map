{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","user","className","alt","src","id","name","email","CardList","users","searchTerm","filter","toLowerCase","includes","map","SearchBox","onChange","type","placeholder","onKeyUp","evt","target","value","App","state","searchField","fetch","then","res","json","u","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAGaA,G,YAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAKI,GAA/B,eACnB,6BAAKJ,EAAKK,OACV,4BAAIL,EAAKM,aCHAC,G,MAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAChC,OACE,qBAAKR,UAAU,YAAf,SACGO,GAASA,EACPE,QAAO,SAAAV,GAAI,OAAIA,EAAKK,KAAKM,cAAcC,SAASH,MAChDI,KAAI,SAAAb,GAAI,OACP,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKI,WCPbU,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE1B,OACE,uBACEd,UAAU,SACVe,KAAK,SACLC,YAAY,eACZC,QAAS,SAACC,GAAD,OAASJ,EAASI,EAAIC,OAAOC,YCwB7BC,E,kDA3Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXf,MAAO,GACPgB,YAAa,IALH,E,gEASO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAC,OAAI,EAAKC,SAAS,CAAEtB,MAAOqB,S,+BAG5B,IAAD,OACP,OACE,sBAAK5B,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAWc,SAAW,SAAAM,GAAK,OAAI,EAAKS,SAAS,CAAEN,YAAaH,OAC5D,cAAC,EAAD,CAAUb,MAAOuB,KAAKR,MAAMf,MAAOC,WAAYsB,KAAKR,MAAMC,qB,GAtBhDQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.60782f87.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\nexport const Card = ({ user }) => (\n  <div className=\"card-container\">\n    <img alt=\"user\" src={`https://robohash.org/${user.id}?set=set2`} />\n    <h2>{user.name}</h2>\n    <p>{user.email}</p>\n  </div>\n);","import React from 'react';\nimport { Card } from '../card/card.component';\nimport \"./card-list.styles.css\";\n\nexport const CardList = ({ users, searchTerm }) => {\n  return (\n    <div className=\"card-list\">\n      {users && users\n        .filter(user => user.name.toLowerCase().includes(searchTerm))\n        .map(user => (\n          <Card key={user.id} user={user} />\n        ))}\n    </div>\n  );\n}","import React from 'react';\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ onChange }) => {\n\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder=\"search users\"\n      onKeyUp={(evt) => onChange(evt.target.value)} />\n  );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json())\n      .then(u => this.setState({ users: u }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Users Rolodex</h1>\n        <SearchBox onChange={(value => this.setState({ searchField: value }))} />\n        <CardList users={this.state.users} searchTerm={this.state.searchField} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}